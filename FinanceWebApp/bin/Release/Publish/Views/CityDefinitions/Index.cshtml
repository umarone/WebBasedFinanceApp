@model PagedList.IPagedList<MudasirRehmanAlp.Models.CityDefinition>
@using PagedList.Mvc;
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="panel panel-default">
    <div class="panel-heading">
        <strong>
            City Search
        </strong>
        <a href="#" data-tool="panel-collapse" data-toggle="tooltip" title="maximize / minimise " class="pull-right">
            <em class="fa fa-minus"></em>
        </a>
    </div>
    <div class="panel-wrapper collapse in">
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-4">
                    <label>City Code</label>
                    <input type="text" name="CityCode" id="txtCityCode" class="form-control" placeholder="Search City Code">
                </div>
                <div class="col-sm-4">
                    <label>City Name</label>
                    <input type="text" name="CityName" id="txtCityName" class="form-control" placeholder="Search City Name">
                </div>
                <div class="col-sm-3">

                    <label>Region Name</label>
                    <select id="txtRegionNameSelect" class="select2Cls form-control RegionSelect">
                        <option selected="selected">Select Region</option>
                    </select>

                    <input type="hidden" id="hiddenRegionID" />

                </div>

            </div>

        </div>
        <div class="panel-body">
            <div class="table-responsive">
                <table id="SearchDatatable" class="table table-striped table-hover">
                    <thead>
                        <tr class="info">
                            <th class="sort-numeric">City Code</th>
                            <th class="sort-alpha">City Name</th>
                            <th class="sort-alpha">Region Name</th>
                            <th>IsActive</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="SearchBody">
                    </tbody>
                </table>
            </div>
        </div>
        <div class="panel-footer">
            <button type="button" class="btn btn-info" id="btnSearch" onclick="SearchDataTable();" title="Search">Search  <i class="fa fa-search"></i></button>
            <button type="button" class="btn btn-default" id="btnReset" onclick="ResetDataTable()" title="Reset">Reset  <i class="icon-refresh"></i></button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-2">
        <a class="btn btn-pill-right btn-primary clsBtnAppCreate" href="@Url.Action("Create")" title="Add New City Definitions">
            <i class="fa fa-plus"></i> Add New
        </a>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <strong>
                    City Definitions
                </strong>
                <div class="input-group pull-right input-group-sm" style="width: 150px;">
                    <input type="text" name="table_search" class="form-control pull-right" placeholder="Search">
                    <div class="input-group-btn">
                        <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                    </div>
                </div>


            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table">
                        <tr class="info">
                            <th>City Code</th>
                            <th>City Name</th>
                            <th>Region Name</th>
                            <th>IsActive</th>
                            <th>Action</th>
                        </tr>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CityCode)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CityName)
                                    </td>
                                    <td>
                                        @{
                                            if (item.RegionId != null)
                                            {
                                                @item.RegionDefinition.RegionName
                                            }
                                        }
                                    </td>
                                    <td>
                                        @{
                                            if (item.IsActive == true)
                                            {
                                                <span class="label label-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="label label-danger">In-Active</span>
                                            }
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-info btn-flat">Action</button>
                                            <button type="button" class="btn btn-info btn-flat dropdown-toggle" data-toggle="dropdown">
                                                <span class="caret"></span>
                                                <span class="sr-only">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu" role="menu">
                                                <li><a href="@Url.Action("Edit",new { id = item.CityId })" class="clsBtnAppUpdate" title="Edit">Edit</a></li>
                                                <li><a href="@Url.Action("Details",new { id = item.CityId })" class="clsBtnAppPrint" title="Details">Details</a></li>
                                                <li class="divider"></li>
                                                <li>
                                                    <a href="#" onclick="DeleteRecordSWL('/CityDefinitions/Delete?id='+@item.CityId)" class="clsBtnAppDelete" title="Delete">Delete</a>
                                                </li>
                                            </ul>
                                        </div>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="pagination pagination-sm m0">
                        <div class="pagination pagination-sm m0">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
                        </div>
                        <div>
                            showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount City
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/Common")
    <script>
        $(document).ready(function () {

        var message = '@(TempData["ErrorMessage"])';
        var Validation = '@(TempData["Validation"])';
        showMessage(message, Validation)
             var rName = "CityDefinitions";
            GridPermission(rName)
            //-------------
            LoadAllRegion();
            //---------------
            $(".RegionSelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenRegionID").val(ID);
            });
        });
        function LoadAllRegion() {
            $('#txtRegionNameSelect option').remove();
            $('#txtRegionNameSelect').append('<option value="0">Select Region</option>');
            var url = "/Json/LoadAllRegion";
            $.get(url, { ID: "", },
                function (Data) {
                    debugger
                    for (i = 0; i < Data.length; i++) {
                        $('#txtRegionNameSelect').append('<option value="' + Data[i].value + '">' + Data[i].label + '</option>');
                    }

                });
        }
         function ResetDataTable() {
             $("#txtCityCode").val('');
             $("#txtCityName").val('');
             $("#hiddenRegionID").val('');
              $("#txtRegionNameSelect").val('0').trigger('change');
            $('#SearchDatatable tbody').empty();
        }
 function SearchDataTable() {
            debugger
            var cityCode = $("#txtCityCode").val();
     var cityName = $("#txtCityName").val();
     var regionID=$("#hiddenRegionID").val();

            var PostModel = {
                CityCode: cityCode,
                CityName: cityName,
               RegionId:regionID
            };

            var searchData = JSON.stringify(PostModel);
            var url = "/CityDefinitions/Search";
             $.get(url, { searchModel: searchData, },
                function (Data) {
                    debugger

                    if ( $.fn.DataTable.isDataTable('#SearchDatatable') ) {
                          $('#SearchDatatable').DataTable().destroy();
                       }
                     $('#SearchDatatable tbody').empty();
                     $("#SearchBody").html(Data);
                     LoadSearchTables();

                });
        }
        function LoadSearchTables() {
              //-------------- Check permissions 
            var rName = "CityDefinitions";
            GridPermission(rName);
           //-----------------------
             $('#SearchDatatable').dataTable({
                    'paging': true,  // Table pagination
                    'ordering': true,  // Column ordering
                    'info': true,  // Bottom left status text
                    'responsive': true, // https://datatables.net/extensions/responsive/examples/

                    // Text translation options
                    // Note the required keywords between underscores (e.g _MENU_)
                    oLanguage: {
                        sSearch: 'Search all columns:',
                        sLengthMenu: '_MENU_ records per page',
                        info: 'Showing page _PAGE_ of _PAGES_',
                        zeroRecords: 'Nothing found - sorry',
                        infoEmpty: 'No records available',
                        infoFiltered: '(filtered from _MAX_ total records)'
                    },
                    // Datatable Buttons setup
                    dom: '<"html5buttons"B>lTfgitp',
                    buttons: [
                        { extend: 'copy', className: 'btn-sm' },
                        { extend: 'csv', className: 'btn-sm' },
                        { extend: 'excel', className: 'btn-sm', title: 'XLS-File' },
                        { extend: 'pdf', className: 'btn-sm', title: $('title').text() },
                        { extend: 'print', className: 'btn-sm' }
                    ]
                });
        }

    </script>
}
