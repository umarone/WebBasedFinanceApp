@model MudasirRehmanAlp.Models.EmployeePersonalDetails

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- START panel-->
<div class="panel panel-default">
    <div class="panel-heading">Employees</div>
    <div class="panel-body">
        <div role="tabpanel">
            <!-- Nav tabs-->
            <ul role="tablist" class="nav nav-tabs">
                <li role="presentation" class="active">
                    <a href="#personalDetails" aria-controls="home" role="tab" data-toggle="tab">Personal Details</a>
                </li>
                <li role="presentation">
                    <a href="#Users" aria-controls="profile" role="tab" data-toggle="tab">Users</a>
                </li>
                <li role="presentation">
                    <a href="#messages" aria-controls="messages" role="tab" data-toggle="tab">Messages</a>
                </li>
                <li role="presentation">
                    <a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Settings</a>
                </li>
            </ul>
            <!-- Tab panes-->
            <div class="tab-content">
                <div id="personalDetails" role="tabpanel" class="tab-pane active">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.EmployeeId, new { @id = "hiddenEmployeeId" })
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-sm-1">
                                    <div class="form-group">
                                        <label>Code</label>
                                        @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control form-control-rounded", @id = "txtEmployeeCode", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Organization Name</label>
                                        <select id="txtOrganizationSelect" class="select2Cls form-control OrganizationSelect">
                                            @{
                                                if (Model.OrganizationID != null)
                                                {
                                                    <option value="@Model.OrganizationID">@Model.OrganizationDefinition.OrganizationUnitName</option>
                                                }
                                                else
                                                {
                                                    <option selected="selected">Select Organization Name</option>
                                                }
                                            }

                                            @{
                                                foreach (var item in ViewBag.OrganizationList as List<MudasirRehmanAlp.Models.OrganizationDefinition>)
                                                {
                                                    if (Model.OrganizationID != null)
                                                    {
                                                        if (Model.OrganizationID != item.Id)
                                                        {
                                                            <option value="@item.Id">@item.OrganizationUnitName</option>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.Id">@item.OrganizationUnitName</option>
                                                    }

                                                }
                                            }
                                        </select>
                                        @Html.HiddenFor(model => model.OrganizationID, new { @id = "hiddenOrganizationID" })
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label>Title</label>
                                        <select id="txtTitleNameSelect" class="select2Cls form-control TitleSelect">

                                            @{
                                                if (!String.IsNullOrEmpty(Model.Title))
                                                {

                                                    <option value="@Model.Title">@Model.Title</option>
                                                    if (Model.Title == "Mr")
                                                    {
                                                        <option value="Miss">Miss</option>
                                                    }
                                                    else if (Model.Title == "Miss")
                                                    {
                                                        <option value="Mr">Mr </option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option selected="selected">Select Title</option>
                                                    <option value="Mr">Mr </option>
                                                    <option value="Miss">Miss</option>
                                                }
                                            }




                                        </select>
                                        @Html.HiddenFor(model => model.Title, new { @id = "hiddenTitle" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>First Name </label>
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control form-control-rounded", @id = "txtFirstName" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Last Name </label>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control form-control-rounded", @id = "txtLastName" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label>Father Name </label>
                                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control form-control-rounded", @id = "txtFatherName" } })
                                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <label>Date of Birth </label>
                                    <div class="input-group date datetimepicker">
                                        @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control date form-control-rounded", @id = "txtDateofBirth" } })
                                        @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="fa fa-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>CNIC No</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-sort-numeric-asc"></i></span>
                                            @{
                                                if (!String.IsNullOrEmpty(Model.CNICNo))
                                                {
                                                    <input type="text" name="CNICNo" id="txtCNICNo" value="@Model.CNICNo    " data-masked="" data-inputmask="'mask': '99999-9999999-9'" placeholder="CNIC No" class="form-control form-control-rounded" />
                                                }
                                                else
                                                {
                                                    <input type="text" name="CNICNo" id="txtCNICNo" data-masked="" data-inputmask="'mask': '99999-9999999-9'" placeholder="CNIC No" class="form-control form-control-rounded" />
                                                }
                                            }

                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label>Gender</label>
                                        <select id="txtGenderNameSelect" class="select2Cls form-control GenderSelect">
                                            @{
                                                if (!String.IsNullOrEmpty(Model.Gender))
                                                {

                                                    <option value="@Model.Gender">@Model.Gender</option>
                                                    if (Model.Gender == "Female")
                                                    {
                                                        <option value="Male">Male </option>
                                                    }
                                                    else if (Model.Gender == "Male")
                                                    {
                                                        <option value="Female">Female</option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option selected="selected">Select Gender</option>
                                                }
                                            }



                                        </select>
                                        @Html.HiddenFor(model => model.Gender, new { @id = "hiddenGender" })
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label>Marital Status</label>
                                        <select id="txtMaritalStatusNameSelect" class="select2Cls form-control MaritalStatusSelect">
                                            @{
                                                if (!String.IsNullOrEmpty(Model.MaritalStatus))
                                                {

                                                    <option value="@Model.Gender">@Model.MaritalStatus</option>
                                                    if (Model.MaritalStatus == "Single")
                                                    {
                                                        <option value="Married">Married </option>
                                                    }
                                                    else if (Model.MaritalStatus == "Married")
                                                    {
                                                        <option value="Single">Single</option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option selected="selected">Select Marital Status</option>
                                                }
                                            }

                                        </select>
                                        @Html.HiddenFor(model => model.MaritalStatus, new { @id = "hiddenMaritalStatus" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Mobile No</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                                            @{
                                                if (!String.IsNullOrEmpty(Model.MobileNo))
                                                {
                                                    <input type="text" name="MobileNo" value="@Model.MobileNo" id="txtMobileNo" data-masked="" data-inputmask="'mask': '(9999) 999-9999'" placeholder="Mobile no" class="form-control form-control-rounded" />
                                                }
                                                else
                                                {
                                                    <input type="text" name="MobileNo" id="txtMobileNo" data-masked="" data-inputmask="'mask': '(9999) 999-9999'" placeholder="Mobile no" class="form-control form-control-rounded" />
                                                }
                                            }

                                        </div>

                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Phone No</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                                            @{
                                                if (!String.IsNullOrEmpty(Model.PhoneNo))
                                                {
                                                    <input type="text" name="PhoneNo" value="@Model.PhoneNo" id="txtPhoneNo" data-masked="" data-inputmask="'mask': '(9999) 999-9999'" placeholder="Phone no" class="form-control form-control-rounded " />
                                                }
                                                else
                                                {
                                                    <input type="text" name="PhoneNo" id="txtPhoneNo" data-masked="" data-inputmask="'mask': '(9999) 999-9999'" placeholder="Phone no" class="form-control form-control-rounded " />
                                                }
                                            }

                                        </div>

                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Email</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                                            @{
                                                if (!String.IsNullOrEmpty(Model.Email))
                                                {
                                                    <input type="text" name="Email" value="@Model.Email" id="txtEmail" placeholder="Email" class="form-control form-control-rounded " />
                                                }
                                                else
                                                {
                                                    <input type="text" name="Email" id="txtEmail" placeholder="Email" class="form-control form-control-rounded " />
                                                }
                                            }

                                        </div>

                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>City Name</label>
                                        <select id="txtCityNameSelect" class="select2Cls form-control CitySelect">

                                            @{
                                                if (Model.CityID != null)
                                                {
                                                    <option value="@Model.CityID">@Model.CityDefinition.CityName</option>
                                                }
                                                else
                                                {
                                                    <option selected="selected">Select City</option>
                                                }
                                                foreach (var item in ViewBag.CityDefinitionsList as List<MudasirRehmanAlp.Models.CityDefinition>)
                                                {

                                                    if (Model.OrganizationID != null)
                                                    {
                                                        if (Model.CityID != item.CityId)
                                                        {
                                                            <option value="@item.CityId">@item.CityName</option>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.CityId">@item.CityName</option>
                                                    }

                                                }
                                            }
                                        </select>
                                        @Html.HiddenFor(model => model.CityID, new { @id = "hiddenCityID" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Permanent Address</label>
                                        @Html.TextAreaFor(model => model.PermanentAddress, new { @class = "form-control", @id = "txtPermanentAddress" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Temporary Address</label>
                                        @Html.TextAreaFor(model => model.TemporaryAddress, new { @class = "form-control", @id = "txtTemporaryAddress" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label">CNIC Front</label>
                                        <div class="col-sm-10">
                                            <input type="file" name="fileCNICFront" id="fileCNICFront" data-classbutton="btn btn-default" data-classinput="form-control inline" class="form-control filestyle" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label">CNIC Back</label>
                                        <div class="col-sm-10">
                                            <input type="file" name="fileCNICBack" id="fileCNICBack" data-classbutton="btn btn-default" data-classinput="form-control inline" class="form-control filestyle" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label">Employee Picture</label>
                                        <div class="col-sm-10">
                                            <input type="file" name="fileEmployeePicture" id="fileEmployeePicture" data-classbutton="btn btn-default" data-classinput="form-control inline" class="form-control filestyle" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb">
                                <div class="col-sm-2">
                                    <label>Is User Created</label>
                                    <div class="form-group">
                                        <label class="radio-inline c-radio">
                                            @Html.RadioButton("IsUser", "true", new { @checked = "checked", @class = "clsRDOIsUser", @type = "radio" })  <span class="fa fa-check"></span> Yes &nbsp; &nbsp; &nbsp;
                                        </label>
                                        <label class="radio-inline c-radio">
                                            @Html.RadioButton("IsUser", "false", new { @type = "radio", @class = "clsRDOIsUser" }) <span class="fa fa-remove"></span> No
                                        </label>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <label>Status</label>

                                    <div class="form-group">
                                        <label class="radio-inline c-radio">
                                            @Html.RadioButton("IsActive", "true", new { @checked = "checked", @class = "clsRDOIsActive", @type = "radio" })  <span class="fa fa-check"></span> Yes &nbsp; &nbsp; &nbsp;
                                        </label>
                                        <label class="radio-inline c-radio">
                                            @Html.RadioButton("IsActive", "false", new { @type = "radio", @class = "clsRDOIsActive" }) <span class="fa fa-remove"></span> No
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2">
                                    <label>CNIC Front</label>
                                    <!-- START widget-->
                                    <div class="panel widget">
                                        @if (Model.CNICFront != null)
                                        {
                                            var base64 = Convert.ToBase64String(Model.CNICFront);
                                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                            <img src='@imgSrc' alt="Image" class="img-responsive" />
                                        }
                                    </div>
                                    <!-- END widget-->
                                </div>
                                <div class="col-lg-2">
                                    <label>CNIC Back</label>
                                    <!-- START widget-->
                                    <div class="panel widget">
                                        @if (Model.CNICBack != null)
                                        {
                                            var base64 = Convert.ToBase64String(Model.CNICBack);
                                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                            <img src='@imgSrc' alt="Image" class="img-responsive" />
                                        }
                                    </div>
                                    <!-- END widget-->
                                </div>
                                <div class="col-lg-2">
                                    <label>Employee Picture</label>
                                    <!-- START widget-->
                                    <div class="panel widget">
                                        @if (Model.EmployeePicture != null)
                                        {
                                            var base64 = Convert.ToBase64String(Model.EmployeePicture);
                                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                            <img src='@imgSrc' alt="Image" class="img-responsive" />
                                        }
                                    </div>
                                    <!-- END widget-->
                                </div>
                            </div>

                        </div>
                    }
                </div>
                <div id="Users" role="tabpanel" class="tab-pane">
                    <div class="panel-body">

                        <h1>Pending</h1>
                    </div>

                </div>
                <div id="messages" role="tabpanel" class="tab-pane">
                    <h1>Pending</h1>
                </div>
                <div id="settings" role="tabpanel" class="tab-pane">
                    <h1>Pending</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END panel-->
<div class="panel">

    <div class="panel-footer">

        <button type="submit" class="btn btn-success" title="Update" id="btnSubmit"> Update &nbsp;<em class="fa fa-edit"></em></button>
        <a href="@Url.Action("IndexSuperAdmin")" title="Back to List" class="btn btn-default">Back to List &nbsp;<em class="fa fa-backward"></em></a>
    </div>
</div>
@section Styles {
    @Styles.Render("~/bundles/select2Css")
    @Styles.Render("~/bundles/datetimePickerCss")
}
@section Scripts {

    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/datetimePicker")
    @Scripts.Render("~/bundles/demoForms")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/bundles/filestyle")
    @Scripts.Render("~/bundles/demoPanels")
    <script>
        $(document).ready(function () {

        var message = '@(TempData["ErrorMessage"])';
        var Validation = '@(TempData["Validation"])';
            showMessage(message, Validation)
             //---------- Permission Code
              var rName = 'EmployeePersonalDetails';
              var id = '@Model.EmployeeId';
              PagePermission(rName, id);
            //-------------------
              $(".OrganizationSelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenOrganizationID").val(ID);
              });
            $(".CitySelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenCityID").val(ID);
            });
             $(".TitleSelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenTitle").val(ID);
            });
              $(".GenderSelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenGender").val(ID);
              });
              $(".MaritalStatusSelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenMaritalStatus").val(ID);
            });
            $("#btnSubmit").click(function () {
                debugger
                var formData = new FormData();
                var EmployeeDetailsObj = new Array();
                var EmployeeDetailsItems = {};

                 var EmpImages = document.getElementById("fileEmployeePicture").files.length;
                for (var i = 0; i < EmpImages; i++) {
                    var image = document.getElementById("fileEmployeePicture").files[i];
                    formData.append("EmpImages", image);
                }
                //----------------------------
                var cnicfront = document.getElementById("fileCNICFront").files.length;
                for (var i = 0; i < cnicfront; i++) {
                    var cnicF = document.getElementById("fileCNICFront").files[i];
                    formData.append("CNICFront", cnicF);
                }
                 //----------------------------
                var cnicback = document.getElementById("fileCNICBack").files.length;
                for (var i = 0; i < cnicback; i++) {
                    var cnicB = document.getElementById("fileCNICBack").files[i];
                    formData.append("CNICBack", cnicB);
                }


                EmployeeDetailsItems = {
                    EmployeeId:$("#hiddenEmployeeId").val(),
                    OrganizationID:$("#hiddenOrganizationID").val(),
                    EmployeeCode:$("#txtEmployeeCode").val(),
                     Title:$("#hiddenTitle").val(),
                     FirstName:$("#txtFirstName").val(),
                     LastName:$("#txtLastName").val(),
                     FatherName:$("#txtFatherName").val(),
                     DateofBirth:$("#txtDateofBirth").val(),
                     CNICNo:$("#txtCNICNo").val(),
                     Gender:$("#hiddenGender").val(),
                     MobileNo:$("#txtMobileNo").val(),
                     PhoneNo:$("#txtPhoneNo").val(),
                    Email:$("#txtEmail").val(),
                    MaritalStatus:$("#hiddenMaritalStatus").val(),
                     CityID:$("#hiddenCityID").val(),
                     PermanentAddress:$("#txtPermanentAddress").val(),
                     TemporaryAddress:$("#txtTemporaryAddress").val(),
                     IsActive: $(".clsRDOIsActive:checked").val(),
                     IsUser:$(".clsRDOIsUser:checked").val(),
                }
                EmployeeDetailsObj.push(EmployeeDetailsItems);

                 var EmpMaster = JSON.stringify(EmployeeDetailsObj);
                formData.append("EmployeeDetails", EmpMaster);


                 if (EmployeeDetailsObj.length > 0) {
                    $.ajax({
                        type: "POST",
                        url: "/EmployeePersonalDetails/Edit",
                        data: formData,
                        dataType: 'json',
                        contentType: false,
                        processData: false,
                        async: false,
                        success: function (url) {
                            window.location.href = "@Url.Action("IndexSuperAdmin")";
                        },
                        error: function () {
                            alert("Error");
                        }
                    });

                }
                else {

                     alert("Error Else");
                }

            });
    });

    </script>
}
