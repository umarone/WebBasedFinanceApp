@model MudasirRehmanAlp.ModelsView.EmployeeUsersViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var counter = 0;
}


<div class="panel panel-default">
    <div class="panel-heading">Users Definitions</div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId, new { @id = "hiddenUserId" })
        @Html.HiddenFor(model => model.UserRoleID, new { @id = "hiddenUserRoleID" })
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-3">


                    <div class="form-group">
                        <label>Employee Name</label>
                        @if (Model.EmployeeID != null)
                        {
                            <input type="text" value="@Model.FullName" class="form-control form-control-rounded" readonly="readonly" />
                        }
                        else
                        {
                            <input type="text" class="form-control form-control-rounded" id="txtOrganizationName" readonly="readonly" />
                        }
                        @Html.HiddenFor(model => model.EmployeeID, new { @id = "hiddenEmployeeID" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Role Name</label>
                        <select id="txtRoleNameSelect" class="select2Cls form-control RoleSelect">
                            @{
                                if (Model.RoleID != null)
                                {
                                    <option value="@Model.RoleID">@Model.RoleName</option>
                                }
                                else
                                {
                                    <option selected="selected">Select Role</option>
                                }
                                foreach (var item in ViewBag.RoleList as List<MudasirRehmanAlp.Models.Roles>)
                                {
                                    if (Model.RoleID != null)
                                    {
                                        if (Model.RoleID != item.RoleId)
                                        {
                                            <option value="@item.RoleId">@item.RoleName</option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="@item.RoleId">@item.RoleName</option>
                                    }

                                }
                            }
                        </select>
                        @Html.HiddenFor(model => model.RoleID, new { @id = "hiddenRoleID" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Full Name </label>
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control form-control-rounded", @id = "txtFullName", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Organization Name </label>
                        @if (Model.OrganizationID != null)
                        {
                            <input type="text" value="@Model.OrganizationName" class="form-control form-control-rounded" id="txtOrganizationName" readonly="readonly" />
                        }
                        else
                        {
                            <input type="text" class="form-control form-control-rounded" id="txtOrganizationName" readonly="readonly" />
                        }
                        @Html.HiddenFor(model => model.OrganizationID, new { @id = "hidddenOrganizationID" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label>User Name</label>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control form-control-rounded", @id = "txtUserName", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" class="form-control form-control-rounded" name="Password" id="txtPassword" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <label>Status</label>

                    <div class="form-group">
                        <label class="radio-inline c-radio">
                            @Html.RadioButton("IsActive", "true", new { @checked = "checked", @type = "radio" })  <span class="fa fa-check"></span> Yes &nbsp; &nbsp; &nbsp;
                        </label>
                        <label class="radio-inline c-radio">
                            @Html.RadioButton("IsActive", "false", new { @type = "radio" }) <span class="fa fa-remove"></span> No
                        </label>
                    </div>
                </div>
            </div>

        </div>
    }
    <div class="panel-body">
        <div class="row col-md-12 form-group">
            <label>Branches Check List</label>
        </div>

        <div class="row col-md-12 form-group">
            @{
                foreach (var item in Model.procGetBranchCheckListByEmployeeIds)
                {
                    counter = counter + 1;
                    <div class="col-md-2">
                        <input type="hidden" value="@item.Id" id="HiddenBranchId_@counter" />
                        @if (item.IsSelected == true)
                        {
                            <div class="checkbox c-checkbox mt-4">
                                <label>
                                    <input type="checkbox" class="custom-control-input" id="chkBoxIsSelected_@counter" checked="checked" />
                                    <span class="fa fa-check"></span>
                                    @item.Name
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="checkbox c-checkbox mt-4">
                                <label>
                                    <input type="checkbox" class="custom-control-input" id="chkBoxIsSelected_@counter" />
                                    <span class="fa fa-check"></span>
                                    @item.Name
                                </label>
                            </div>
                        }

                    </div>
                }
            }
        </div>
        <input type="hidden" value="@counter" id="currentRowID" />

    </div>
    <div class="panel-footer">
        <button type="button" onclick="UpdatePostModel();" class="btn btn-success" title="Update" @*id="btnSubmit"*@> Update &nbsp;<em class="fa fa-edit"></em></button>
        <a href="@Url.Action("Index")" title="Back to List" class="btn btn-default">Back to List &nbsp;<em class="fa fa-backward"></em></a>
    </div>
</div>
@section Styles {

    @Styles.Render("~/bundles/select2Css")
}
@section Scripts {
    @Scripts.Render("~/bundles/select2")
    <script>
        $(document).ready(function () {
          var message = '@(TempData["ErrorMessage"])';
        var Validation = '@(TempData["Validation"])';
            showMessage(message, Validation)
             //---------- Permission Code
              var rName = 'Users';
              var id = '@Model.UserId';
              PagePermission(rName, id);
            //---------------
            $(".RoleSelect").change(function () {
                var Name = $(this).children("option:selected").text();
                var ID = $(this).children("option:selected").val();
                $("#hiddenRoleID").val(ID);

            });
        });//end of Ready Funtion

        function UpdatePostModel() {
            debugger
            fullAppLoaderFadeIn();
            var formData = new FormData();
            var ItemCount = $("#currentRowID").val();
            var MainArray = new Array();
            var MainItem = {};
            var userId = $("#hiddenUserId").val();
            var userRoleID = $("#hiddenUserRoleID").val();
            
            var employeeId = $("#hiddenEmployeeID").val();
            var roleId = $("#hiddenRoleID").val();
            var fullName = $("#txtFullName").val();

            var orgId = $("#hidddenOrganizationID").val();
            var userName = $("#txtUserName").val();
            var password = $("#txtPassword").val();
            var Status = $('input[name="IsActive"]:checked').val();
            if (password == "") {

                toastr.error("Password is required", "Required field");
                fullAppLoaderFadeOut();
                 return false;
             }
             var userModel = {
                UserId: userId,
                 UserRoleID: userRoleID,
                EmployeeID: employeeId,
                RoleID: roleId,
                FullName:fullName,
                OrganizationID: orgId,
                UserName: userName,
                Password: password,
                IsActive: Status,
            };
            for (var i = 1; i <= ItemCount; i++) {

                MainItem = {
                    EmployeeId: employeeId,
                    OrganizationId: orgId,
                    BranchId: $("#HiddenBranchId_" + i).val(),
                    IsSelected: $("#chkBoxIsSelected_" + i).is(':checked'),
                }
                MainArray.push(MainItem);

            }//End for loop

            //----------
            var userObj = JSON.stringify(userModel);
            var checkObj = JSON.stringify(MainArray);
            formData.append("userJsonObj", userObj);
            formData.append("checkListJsonObj", checkObj);


            if (MainArray.length > 0) {
                $.ajax({
                    type: "POST",
                    url: "/Users/JsonEdit",
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    async: false,
                    success: function (success) {
                        debugger
                        if (success == "OK") {

                            window.location.href = "@Url.Action("Index")";
                        }
                        else {
                            toastr.success(success, "Error");
                            fullAppLoaderFadeOut();
                        }
                    },
                    error: function () {
                        fullAppLoaderFadeOut();
                        var message = 'Something wrong in this request:Internal Server Error';
                        var Validation = 'False';
                        showMessage(message, Validation);
                    }
                });

            }
            else {
                fullAppLoaderFadeOut();
                var message = 'Something wrong in this request';
                var Validation = 'False';
                showMessage(message, Validation);
            }

        }
    </script>
}
